geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
UnWeightedModel=lm(N1Error~N1-1,data=LIMSFullDF)
summary(UnWeightedModel)
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.081876*N1))+
scale_x_log10()
library(shiny)
library(ggpubr)
library(dplyr)
#Data Files and prep work
source("../Scripts/GenPlotMaking.R")
source("../Scripts/WasteWaterDataProccess.R")
source("../Scripts/CassesDataProccess.R")
source("../Scripts/HelperFunctions.R")
source("../Scripts/WasteShiny/PrepData.R", local = TRUE)
LIMSFullDFRoll=RollAvg(LIMSFullDF,n=21,var=c("N1","N1Error"))%>%
filter(!is.nan(N1)&!is.nan(N1Error))%>%
select(Date,Site,N1,N1Error)
UnWeightedModel=lm(N1Error~N1-1,data=LIMSFullDF)
#SDModel=lm(N1Error~N1-1,weights=1/N1Error,data=LIMSFullDF)
#VarModel=lm(N1Error~N1-1,weights=1/N1Error^2,data=LIMSFullDF)
summary(UnWeightedModel)
#summary(SDModel)
#summary(VarModel)
#predict(UnWeightedModel,.)
UsedDF =  LIMSFullDF%>%
mutate(PredN1Un=0.081876*N1)%>%
#mutate(PredN1SD=predict(SDModel,.))%>%
#mutate(PredN1Var=predict(VarModel,.))%>%
mutate(WeirdVar=ifelse(N1Error/PredN1Un>2,"Unexpected high Varience","Expected range of varience"))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.081876*N1))+
scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-PredN1SD))+
scale_x_log10()
#ifelse(BCoV>0,BCoV,0))
errorband=F
FilteredMadBoxPlot=UsedDF%>%
filter(Site =="Madison")%>%
filter(WeirdVar!="Unexpected high Varience")
MadLIMSData=UsedDF%>%
filter(Site =="Madison")
Limits=c(min(MadLIMSData$Date,na.rm = TRUE),max(MadLIMSData$Date,na.rm = TRUE))
MadBoxPlot=ggplot()+
#geom_point(aes(x=Date,y=N1),data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Unweighted"),span=.33,se=errorband,data=FilteredMadBoxPlot)+
geom_smooth(aes(x=Date,y=N1,color="SD", weight=PredN1Un/(N1Error)),span=.33,se=errorband,data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Var", weight=PredN1Un^2/(N1Error)^2),span=.33,se=errorband,data=MadLIMSData)+
Header_theme(ConfigOption)
N1LogGra=MadBoxPlot+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
ggtitle("N1 curve filtered from weird values")
#scale_x_date(limits=c(N1Start,N1End))+
N1LinGra=MadBoxPlot+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
N1Graphics=ggarrange(N1LogGra,N1LinGra,nrow=2,align="hv",legend = "none")
CasePlots=LatCaseDF%>%
filter(Site=="Madison")%>%
ggplot()+aes(x=Date,y=Cases)+
geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
#ifelse(BCoV>0,BCoV,0))
errorband=F
SpanN1=.45
FilteredMadBoxPlot=UsedDF%>%
filter(Site =="Madison")%>%
filter(WeirdVar!="Unexpected high Varience")
MadLIMSData=UsedDF%>%
filter(Site =="Madison")
Limits=c(min(MadLIMSData$Date,na.rm = TRUE),max(MadLIMSData$Date,na.rm = TRUE))
MadBoxPlot=ggplot()+
#geom_point(aes(x=Date,y=N1),data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Unweighted"),span=SpanN1,se=errorband,data=FilteredMadBoxPlot)+
geom_smooth(aes(x=Date,y=N1,color="SD", weight=PredN1Un/(N1Error)),span=SpanN1,se=errorband,data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Var", weight=PredN1Un^2/(N1Error)^2),span=SpanN1,se=errorband,data=MadLIMSData)+
Header_theme(ConfigOption)
N1LogGra=MadBoxPlot+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
ggtitle("N1 curve filtered from weird values")
#scale_x_date(limits=c(N1Start,N1End))+
N1LinGra=MadBoxPlot+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
N1Graphics=ggarrange(N1LogGra,N1LinGra,nrow=2,align="hv",legend = "none")
CasePlots=LatCaseDF%>%
filter(Site=="Madison")%>%
ggplot()+aes(x=Date,y=Cases)+
geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
#ifelse(BCoV>0,BCoV,0))
errorband=F
SpanN1=.33
FilteredMadBoxPlot=UsedDF%>%
filter(Site =="Madison")%>%
filter(WeirdVar!="Unexpected high Varience")
MadLIMSData=UsedDF%>%
filter(Site =="Madison")
Limits=c(min(MadLIMSData$Date,na.rm = TRUE),max(MadLIMSData$Date,na.rm = TRUE))
MadBoxPlot=ggplot()+
#geom_point(aes(x=Date,y=N1),data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Unweighted"),span=SpanN1,se=errorband,data=FilteredMadBoxPlot)+
geom_smooth(aes(x=Date,y=N1,color="SD", weight=PredN1Un/(N1Error)),span=SpanN1,se=errorband,data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Var", weight=PredN1Un^2/(N1Error)^2),span=SpanN1,se=errorband,data=MadLIMSData)+
Header_theme(ConfigOption)
N1LogGra=MadBoxPlot+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
ggtitle("N1 curve filtered from weird values")
#scale_x_date(limits=c(N1Start,N1End))+
N1LinGra=MadBoxPlot+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
N1Graphics=ggarrange(N1LogGra,N1LinGra,nrow=2,align="hv",legend = "none")
CasePlots=LatCaseDF%>%
filter(Site=="Madison")%>%
ggplot()+aes(x=Date,y=Cases)+
geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
#ifelse(BCoV>0,BCoV,0))
errorband=F
SpanN1=.33
FilteredMadBoxPlot=UsedDF%>%
filter(Site =="Madison")%>%
filter(WeirdVar!="Unexpected high Varience")
MadLIMSData=UsedDF%>%
filter(Site =="Madison")
Limits=c(min(MadLIMSData$Date,na.rm = TRUE),max(MadLIMSData$Date,na.rm = TRUE))
MadBoxPlot=ggplot()+
#geom_point(aes(x=Date,y=N1),data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Unweighted"),span=SpanN1,se=errorband,data=FilteredMadBoxPlot)+
geom_smooth(aes(x=Date,y=N1,color="SD", weight=PredN1Un/(N1Error)),span=SpanN1,se=errorband,data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Var", weight=PredN1Un^2/(N1Error)^2),span=SpanN1,se=errorband,data=MadLIMSData)+
Header_theme(ConfigOption)
N1LogGra=MadBoxPlot+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
ggtitle("N1 curve filtered from weird values")
#scale_x_date(limits=c(N1Start,N1End))+
N1LinGra=MadBoxPlot+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
N1Graphics=ggarrange(N1LogGra,N1LinGra,nrow=2,align="hv",legend = "none")
CasePlots=LatCaseDF%>%
filter(Site=="Madison")%>%
ggplot()+aes(x=Date,y=Cases)+
geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
Zoom In
loess(N1~Date,weight=PredN1Un/(N1Error),data=MadLIMSData)
loess(N1~Date,weight=PredN1Un/(N1Error),data=MadLIMSData)
#ifelse(BCoV>0,BCoV,0))
errorband=F
SpanN1=.33
FilteredMadBoxPlot=UsedDF%>%
filter(Site =="Madison")%>%
filter(WeirdVar!="Unexpected high Varience")
MadLIMSData=UsedDF%>%
filter(Site =="Madison")
Limits=c(min(MadLIMSData$Date,na.rm = TRUE),max(MadLIMSData$Date,na.rm = TRUE))
MadBoxPlot=ggplot()+
#geom_point(aes(x=Date,y=N1),data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Filltered"),span=SpanN1,se=errorband,data=FilteredMadBoxPlot)+
geom_smooth(aes(x=Date,y=N1,color="SD", weight=N1/(N1Error)),span=SpanN1,se=errorband,data=MadLIMSData)+
geom_smooth(aes(x=Date,y=N1,color="Var", weight=N1^2/(N1Error)^2),span=SpanN1,se=errorband,data=MadLIMSData)+
Header_theme(ConfigOption)
#loess(N1~Date,weight=N1/(N1Error),data=MadLIMSData)
N1LogGra=MadBoxPlot+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
ggtitle("N1 curve filtered from weird values")
#scale_x_date(limits=c(N1Start,N1End))+
N1LinGra=MadBoxPlot+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
N1Graphics=ggarrange(N1LogGra,N1LinGra,nrow=2,align="hv",legend = "none")
CasePlots=LatCaseDF%>%
filter(Site=="Madison")%>%
ggplot()+aes(x=Date,y=Cases)+
geom_point()+
geom_smooth(se=F,span=.22)+
scale_x_date(limits=Limits)
CaseLogGra=CasePlots+
scale_y_log10()+
facet_wrap(~Site,scales = "free_y")+
Header_theme(ConfigOption)+
ggtitle("Madison Case Data")
CaseLinGra=CasePlots+
Header_theme(ConfigOption)+
theme(axis.text.x = element_text(size = ConfigOption$XAxisLabSiz, colour = "black"),
axis.title.x = element_text(size = ConfigOption$GenFontSiz, colour = "black"),
plot.margin = unit(c(.5,0,0,0), "cm"))
CasesGraphics=ggarrange(CaseLogGra,CaseLinGra,nrow=2,align="hv")
FinalGraphic=ggarrange(N1Graphics,CasesGraphics,nrow=1,align="hv")
MainComp=ggarrange(N1LogGra,CaseLinGra,nrow=2,align="hv",common.legend = T)
MainComp
loess(N1~Date,weight=N1/(N1Error),data=MadLIMSData)
MadLIMSData
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error))+
scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(N1)))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.008*N1)))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.008*N1)))+scale_y_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.008*N1)))+scale_x_log10()
UnWeightedModel=lm(N1Error~N1-1,data=LIMSFullDF)
UnWeightedModel
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.08188*N1)))+scale_x_log10()
SDModel
SDModel=lm(N1Error~N1-1,weights=1/N1Error,data=LIMSFullDF)
VarModel=lm(N1Error~N1-1,weights=1/N1Error^2,data=LIMSFullDF)
SDModel
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.0441  *N1)))+scale_x_log10()
VarModel=lm(N1Error~N1-1,weights=1/N1Error^2,data=LIMSFullDF)
VarModel
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.00805*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.00805*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-.00805*N1))#+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-.00805*N1))#+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.00805*N1)))#+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(.00805*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-.00805*N1))#+scale_x_log10()
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(shiny)
library(ggpubr)
library(dplyr)
library(shinydashboard)
library(shinyjqui)
library(shinycssloaders)
#Data Files and prepwork
source("../Scripts/GenPlotMaking.R")
source("../Scripts/WasteWaterDataProccess.R")
source("../Scripts/CassesDataProccess.R")
source("../Scripts/HelperFunctions.R")
LatWasteFN <- "../../UntrackedData/WW SARS-COV-2 Data V5.xlsx"
LatSpringCaseFN="../../UntrackedData/SpringSemester_CasesByDorm.tsv"
LatFallCaseFN="../../UntrackedData/FallSemester_CasesByDorm.tsv"
HFGWasteFN = "../../UntrackedData/HFG data for stats preliminary 3-18-21.xlsx"
HFGCaseFN="../../UntrackedData/HighFreq_CaseData_2021-05-07.csv"
LatMMSDFN = "../../UntrackedData/MMSD_Cases.2021-05-21.csv"
# HFGFrame=HFGInfo(HFGWasteFN)%>%
#   select(Date,Site=Plant,'Filter replicates',Well,N1=N1GC,N2=N2GC,PMMoV=PMMOVGC,Pct_BCoV=BCoV,everything())%>%
#   mutate('Filter replicates'=as.character('Filter replicates'),Well=as.character(Well))%>%
#   na.omit()
#
#
# HFGCaseDF=HFGCasesPARSER(HFGCaseFN)
# Fullday=data.frame(Date=seq.Date(min(HFGCaseDF$Date),max(HFGCaseDF$Date),1))
# HFGCaseDF=full_join(HFGCaseDF,Fullday,by=c("Date"))
#
# # HFGCaseDF2=HFGCaseDF%>%
# #       mutate(isna=ifelse(EpisodeCases==-999,"True","false"))%>%
# #       mutate(EpisodeCases=ifelse(EpisodeCases==-999,NA,EpisodeCases))%>%
# #       mutate(CollectedCases=ifelse(CollectedCases==-999,NA,CollectedCases))%>%
# #       mutate(ConfirmedCases=ifelse(ConfirmedCases==-999,NA,ConfirmedCases))
# #
# # HFGCaseDFroll2=HFGCaseDF2%>%
# #       filter(!is.na(Site))%>%
# #       arrange(Site,Date)%>%
# #       group_by(Site)%>%
# #       mutate(CollectedCases2=RollAvg(CollectedCases),EpisodeCases2=RollAvg(EpisodeCases),ConfirmedCases2=RollAvg(ConfirmedCases))%>%
# #       ungroup()
#
#
# LatCaseDF=CovidDataPARSER(LatSpringCaseFN,LatFallCaseFN,LatMMSDFN)
#
# LatWasteDF=WasteWater(LatWasteFN)%>%
#   mutate(Date=as.Date(Date))%>%
#   filter(!is.na(Date),!is.na(N1),!is.na(Site))%>%
#   filter(Date<mdy("6/5/2021"))%>%
#   select(Date,Site,N1,N2,PMMoV,Pct_BCoV,AVG)
source("../Scripts/WasteShiny/PrepData.R", local = TRUE)
HFGFrame%>%
select(Date,Site,'Filter replicates',N1)%>%
group_by(Site,Date)%>%
summarize(mN1=exp(mean(log(N1))),vN1=var(N1))%>%
ggplot()+geom_point(aes(x=mN1,y=sqrt(vN1),color=Site))+
scale_y_log10()+scale_x_log10()+ggtitle("Mean vs Standard deviation of 9 points")
HFGVarNine=HFGFrame%>%
select(Date,Site,'Filter replicates',N1)%>%
group_by(Site,Date)%>%
summarize(mN1=mean(N1),vN1=var(N1))
cor(HFGVarNine$mN1,sqrt(HFGVarNine$vN1))
HFGFrame%>%
select(Date,Site,'Filter replicates',N1)%>%
group_by(Site,Date,'Filter replicates')%>%
summarize(mN1=mean(N1),vN1=var(N1))%>%
ggplot()+geom_point(aes(x=mN1,y=sqrt(vN1),color=Site))+
scale_y_log10()+scale_x_log10()+ggtitle("Mean vs Standard deviation of 3 points")
HFGVarThree=HFGFrame%>%
select(Date,Site,'Filter replicates',N1)%>%
group_by(Site,Date,'Filter replicates')%>%
summarize(mN1=mean(N1),vN1=var(N1))
cor(HFGVarThree$mN1,sqrt(HFGVarThree$vN1),use="pairwise.complete.obs")
cor(HFGVarThree$mN1,HFGVarThree$vN1,use="pairwise.complete.obs")
# cases
# LM
# SD
# mean line
# collection, analysis
#
#
T=8
HFGVar=HFGFrame%>%
select(Date,Site,N1,Pct_BCoV)%>%
filter(N1<10e7)%>%
group_by(Site,Date)%>%
summarize(mN1=mean(N1),vN1=var(N1),VBC=mean(Pct_BCoV),VBC=mean(Pct_BCoV))
LM=lm(data=HFGVar,sqrt(vN1)~mN1-1)
LM
# HFGFrame%>%
#   select(Date,Site,N1,'Filter replicates')%>%
#   mutate(lower=N1-1.860*sqrt(207167*N1)/sqrt(9))%>%
#   mutate(Upper=N1+1.860*sqrt(207167*N1)/sqrt(9))%>%
#   #mutate(contzero=lower<0&Upper>0)
#   ggplot()+
#   geom_rect(aes(fill='Filter replicates',ymin=lower,ymax=Upper,xmin=Date-.3,xmax=Date+.3),alpha=.1)+
#   geom_point(aes(x=Date,y=N1,color='Filter replicates'))+scale_y_log10()+facet_wrap(~Site)
LatWasteDF%>%
select(Date,Site,N1)%>%
mutate(lower=N1-2*0.2196*N1)%>%
mutate(Upper=N1+2*0.2196*N1)%>%
#mutate(contzero=lower<0&Upper>0)
ggplot()+
geom_rect(aes(ymin=lower,ymax=Upper,xmin=Date-1,xmax=Date+1),fill="red",alpha=.1)+
geom_point(aes(x=Date,y=N1))+facet_wrap(~Site)
LatData=LatWasteDF%>%
filter((Site=="Madison"))%>%
select(Date,Site,N1)%>%
mutate(lower=N1-2*0.2199*N1)%>%
mutate(Upper=N1+2*0.2199*N1)
HFGData=HFGFrame%>%
filter((Site=="Madison"))
#??lat data off shifted by one day??
N1Start=min(HFGFrame$Date)
N1End=max(HFGFrame$Date)
ggplot()+
geom_rect(aes(ymin=lower,ymax=Upper,xmin=Date-1.3,xmax=Date-.7),fill="red",alpha=.1,data=LatData)+
geom_point(aes(y=N1,color='Filter replicates',x=Date,shape="High Frequency"),data=HFGData)+
geom_point(aes(y=N1,x=Date-1,shape="Longitudinal"),data=LatData,size=2.5)+
scale_y_log10()+
scale_x_date(limits=c(N1Start,N1End))+ggtitle("Waste data and predicted 2 standard deviations")
#'Filter replicates' on variance
#
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-.00805*N1))+scale_x_log10()
UnWeightedModel
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.08188*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.08188*N1))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.08188*N1))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.08188*N1))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error/0.08188*N1))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error/0.08188*N1))+scale_x_log10()+scale_y_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error/(0.08188*N1)))+scale_x_log10()+scale_y_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error/(0.08188*N1)))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.08188*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.08188*N1)))
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.08188*N1))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=log(N1Error)-log(0.08188*N1)))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error-0.08188*N1))+scale_x_log10()
UsedDF%>%
ggplot()+aes(x=N1)+geom_point(aes(y=N1Error/(0.08188*N1)))+scale_x_log10()+scale_y_log10()
seq(1,10)
var(seq(1,10))
log(var(seq(1,10)))
var(log(seq(1,10)))
log(var(seq(1,10)))
var(log(seq(1,10)))
var
data.frame(x=seq(1,100),
y=rep(seq(1,10),100),
z=x+y)
data.frame(x=seq(1,100),
y=rep(seq(1,10),100))
data.frame(x=seq(1,100))
data.frame(x=seq(1,100))%>%
mutate(var=var(seq(1,10)+x))
data.frame(x=seq(1,100))%>%
mutate(var=var(seq(1,10)*x))
data.frame(x=seq(1,100))%>%
mutate(var=var(seq(1,10))*x)
log(var(seq(1,10)))
var(log(seq(1,10)))
data.frame(x=seq(1,100))%>%
mutate(var=var(seq(1,10)*x))
data.frame(x=seq(1,100))%>%
mutate(var=var(seq(1,10*x)))
data.frame(x=seq(1,100))%>%
mutate(vars=var(seq(1,10*x)))
data.frame(x=seq(1,100))%>%
mutate(vars=var(seq(1,10+x)))
data.frame(x=seq(1,100))%>%
mutate(vars=max(seq(1,10+x)))
seq(1,10+x)
