LatCaseDF <- CovidDataPARSER(LatSpringDormFN,LatFallDormFN,MMSDFN = LatMMSDFN)%>%
filter(!is.na(Site))%>%
select(Date,Site,Cases,Tests,Per_pos)
HFGCaseDF <- HFGCasesPARSER(FN = HFGCasesFN)%>%
filter(!is.na(Site))%>%
mutate(Tests=NA,Per_pos=NA)%>%
select(Date,Site,Cases=ReportedCases,Tests,Per_pos)%>%
mutate(Cases = ifelse(Cases==-999,2.5,Cases))%>%
filter(Site!="Madison")
FullCase <- rbind(HFGCaseDF,LatCaseDF)
FullCaseRoll <- RollPerPos(FullCase,"Cases","Tests",Facet="Site",n = 14)
LIMSFullDF <- LIMSDataPARSER(LIMSFN)%>%
select(Date,Site, BCoV, N1,N1Error,N2, N2Error,PMMoV,Pop,FlowRate)
MergedDF <- BestCorDFGen("Madison")
WeightVec <- unlist(lapply((split(dgamma(1:21,scale =5.028338,shape =2.332779),c(rep(1,7),rep(2,7),rep(3,7))
)),mean))
#
# MadData <- MergedDF%>%
#     mutate(MovedCases = data.table::shift(Cases2,2))%>%
#     mutate(Week=as.numeric(Date+6)%/%7)%>%
#     group_by(Week)%>%
#     summarise(N1M=median(N1,na.rm=TRUE),CasesM=mean(MovedCases,na.rm = TRUE))
# A <- (lm(CasesM~N1M-1,data=MadData))
# B <- (lm(CasesM~N1M,data=MadData))
# CheckFunction(DaySmoothing=c(7,14),Show2=FALSE,Mat=TRUE,Ret="LM",CasesUsed="Cases4")
# max(R2Mat)
# max(CorMat)
#summary(PlotingOptions(7,7,2))
#CasesM
#Cases4
print("Binning -> SLD")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="Cases4")
print("SLD->Binning")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="CasesM")
print("Binning -> SLD late Start")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="CasesM",DateStart=mdy("11/13/2020"),ShowPlots=FALSE)
Intercepters <- c("MMSD-P7" ,"MMSD-P2" ,
"MMSD-P8","MMSD-P11",
"MMSD-P18")
IntercepterDFList <- lapply(Intercepters,BestCorDFGen,DateFilt=mdy("2/1/2021"),keep=c("N1","N1Error","N2","N2Error","Pop"))
print("Binning -> SLD")
lapply(IntercepterDFList,HeatMapCor,
StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="Cases4",ShowPlots=FALSE)
print("SLD->Binning")
lapply(IntercepterDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM")
print("Binning -> SLD late Start")
lapply(IntercepterDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM",DateStart=mdy("11/13/2020"),ShowPlots=FALSE)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(ggpubr)
library(forecast)
library(lmtest)
library(lubridate)
library(limma)
library(zoo)
library(dplyr)
library(RColorBrewer)
#Data Files and prep work
source("../../Scripts/GenPlotMaking.R")
source("../../Scripts/WasteWaterDataProccess.R")
source("../../Scripts/CassesDataProccess.R")
source("../../Scripts/HelperFunctions.R")
PathStarter="Z:/"
LatMMSDFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/MMSD_Cases.csv")
LatSpringDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/SpringSemester_CasesByDorm.TSV")
LatFallDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/FallSemester_CasesByDorm.TSV")
LIMSFN <- paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/WATERMICRO_WW_COVID-2021-06-30 17 40.xlsx")
HFGCasesFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HighFreq_CaseData_2021-05-07.csv")
LatCaseDF <- CovidDataPARSER(LatSpringDormFN,LatFallDormFN,MMSDFN = LatMMSDFN)%>%
filter(!is.na(Site))%>%
select(Date,Site,Cases,Tests,Per_pos)
HFGCaseDF <- HFGCasesPARSER(FN = HFGCasesFN)%>%
filter(!is.na(Site))%>%
mutate(Tests=NA,Per_pos=NA)%>%
select(Date,Site,Cases=ReportedCases,Tests,Per_pos)%>%
mutate(Cases = ifelse(Cases==-999,2.5,Cases))%>%
filter(Site!="Madison")
FullCase <- rbind(HFGCaseDF,LatCaseDF)
FullCaseRoll <- RollPerPos(FullCase,"Cases","Tests",Facet="Site",n = 14)
LIMSFullDF <- LIMSDataPARSER(LIMSFN)%>%
select(Date,Site, BCoV, N1,N1Error,N2, N2Error,PMMoV,Pop,FlowRate)
MergedDF <- BestCorDFGen("Madison")
WeightVec <- unlist(lapply((split(dgamma(1:21,scale =5.028338,shape =2.332779),c(rep(1,7),rep(2,7),rep(3,7))
)),mean))
#
# MadData <- MergedDF%>%
#     mutate(MovedCases = data.table::shift(Cases2,2))%>%
#     mutate(Week=as.numeric(Date+6)%/%7)%>%
#     group_by(Week)%>%
#     summarise(N1M=median(N1,na.rm=TRUE),CasesM=mean(MovedCases,na.rm = TRUE))
# A <- (lm(CasesM~N1M-1,data=MadData))
# B <- (lm(CasesM~N1M,data=MadData))
# CheckFunction(DaySmoothing=c(7,14),Show2=FALSE,Mat=TRUE,Ret="LM",CasesUsed="Cases4")
# max(R2Mat)
# max(CorMat)
#summary(PlotingOptions(7,7,2))
#CasesM
#Cases4
print("Binning -> SLD")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="Cases4")
print("SLD->Binning")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="CasesM")
print("Binning -> SLD late Start")
HeatMapCor(DF=MergedDF,StartDate=0:7,DaySmoothing=c(7),Lag=-2:2,CasesUsed="CasesM",DateStart=mdy("11/13/2020"),ShowPlots=FALSE)
Intercepters <- c("MMSD-P7" ,"MMSD-P2" ,
"MMSD-P8","MMSD-P11",
"MMSD-P18")
IntercepterDFList <- lapply(Intercepters,BestCorDFGen,DateFilt=mdy("2/1/2021"),keep=c("N1","N1Error","N2","N2Error","Pop"))
print("Binning -> SLD")
lapply(IntercepterDFList,HeatMapCor,
StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="Cases4",ShowPlots=FALSE)
print("SLD->Binning")
lapply(IntercepterDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM")
print("Binning -> SLD late Start")
lapply(IntercepterDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM",DateStart=mdy("11/13/2020"),ShowPlots=FALSE)
summary(PlotingOptions(IntercepterDFList[[2]],6,7,-2,Ret="LM",Show=TRUE))
Sites <- c("Hudson","Kenosha","Oshkosh","River Falls","Sun Prairie","Wausau")
SitesDFList <- lapply(Sites,BestCorDFGen,DateFilt=mdy("2/1/2021"),keep=c("N1","N1Error","N2","N2Error","Pop"))
print("Binning -> SLD")
lapply(SitesDFList,HeatMapCor,
StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="Cases4",ShowPlots=FALSE)
print("SLD->Binning")
lapply(SitesDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM")
print("Binning -> SLD late Start")
lapply(SitesDFList,HeatMapCor,StartDate=0:7,DaySmoothing=c(7,14),Lag=-2:2,CasesUsed="CasesM",DateStart=mdy("11/13/2020"),ShowPlots=FALSE)
summary(PlotingOptions(SitesDFList[[1]],0,7,-1,Ret="LM",Show=TRUE))
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(ggpubr)
library(forecast)
library(lmtest)
library(lubridate)
library(limma)
library(zoo)
library(dplyr)
#Data Files and prep work
source("../../Scripts/GenPlotMaking.R")
source("../../Scripts/WasteWaterDataProccess.R")
source("../../Scripts/CassesDataProccess.R")
source("../../Scripts/HelperFunctions.R")
PathStarter="Z:/"
LatMMSDFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/MMSD_Cases.csv")
LatSpringDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/SpringSemester_CasesByDorm.TSV")
LatFallDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/FallSemester_CasesByDorm.TSV")
LIMSFN <- paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/WATERMICRO_WW_COVID-2021-06-30 17 40.xlsx")
HFGCasesFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HighFreq_CaseData_2021-05-07.csv")
LatCaseDF <- CovidDataPARSER(LatSpringDormFN,LatFallDormFN,MMSDFN = LatMMSDFN)%>%
filter(!is.na(Site))%>%
select(Date,Site,Cases,Tests,Per_pos)
HFGCaseDF <- HFGCasesPARSER(FN = HFGCasesFN)%>%
filter(!is.na(Site))%>%
mutate(Tests=NA,Per_pos=NA)%>%
select(Date,Site,Cases=ReportedCases,Tests,Per_pos)%>%
mutate(Cases = ifelse(Cases==-999,2.5,Cases))%>%
filter(Site!="Madison")
FullCase <- rbind(HFGCaseDF,LatCaseDF)
FullCaseRoll <- RollPerPos(FullCase,"Cases","Tests",Facet="Site",n = 14)
LIMSFullDF <- LIMSDataPARSER(LIMSFN)%>%
select(Date,Site, BCoV, N1,N1Error,N2, N2Error,PMMoV,Pop,FlowRate)
CaseSum=FullCase%>%
filter(!is.na(Cases))%>%
group_by(Site)%>%
summarise(NCase=n())
N1Sum=LIMSFullDF%>%
filter(!is.na(N1))%>%
group_by(Site)%>%
summarise(NN1=n())
DataComp <- inner_join(CaseSum,N1Sum,by=c("Site"))%>%
mutate(Dif=NCase-NN1,min=ifelse(NCase<NN1,NCase,NN1))
LowCaseDataPoints <- DataComp%>%
filter(Dif<0)
#library(dynlm)
IsFull <- function(DF){
return(length(DF$Date)==max(DF$Date)-min(DF$Date)+1)
}
MergedDF <- BestCorDFGen("Madison")
#TODO:collection date
#library("robets")
#.0131
MethodPlot <- function(DF){
RobMod=fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
plot(RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF$Site))
}
MethodPlot(MergedDF)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(ggpubr)
library(forecast)
library(lmtest)
library(lubridate)
library(limma)
library(zoo)
library(dplyr)
#Data Files and prep work
source("../../Scripts/GenPlotMaking.R")
source("../../Scripts/WasteWaterDataProccess.R")
source("../../Scripts/CassesDataProccess.R")
source("../../Scripts/HelperFunctions.R")
PathStarter="Z:/"
LatMMSDFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/MMSD_Cases.csv")
LatSpringDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/SpringSemester_CasesByDorm.TSV")
LatFallDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/FallSemester_CasesByDorm.TSV")
LIMSFN <- paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/WATERMICRO_WW_COVID-2021-06-30 17 40.xlsx")
HFGCasesFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HighFreq_CaseData_2021-05-07.csv")
LatCaseDF <- CovidDataPARSER(LatSpringDormFN,LatFallDormFN,MMSDFN = LatMMSDFN)%>%
filter(!is.na(Site))%>%
select(Date,Site,Cases,Tests,Per_pos)
HFGCaseDF <- HFGCasesPARSER(FN = HFGCasesFN)%>%
filter(!is.na(Site))%>%
mutate(Tests=NA,Per_pos=NA)%>%
select(Date,Site,Cases=ReportedCases,Tests,Per_pos)%>%
mutate(Cases = ifelse(Cases==-999,2.5,Cases))%>%
filter(Site!="Madison")
FullCase <- rbind(HFGCaseDF,LatCaseDF)
FullCaseRoll <- RollPerPos(FullCase,"Cases","Tests",Facet="Site",n = 14)
LIMSFullDF <- LIMSDataPARSER(LIMSFN)%>%
select(Date,Site, BCoV, N1,N1Error,N2, N2Error,PMMoV,Pop,FlowRate)
CaseSum=FullCase%>%
filter(!is.na(Cases))%>%
group_by(Site)%>%
summarise(NCase=n())
N1Sum=LIMSFullDF%>%
filter(!is.na(N1))%>%
group_by(Site)%>%
summarise(NN1=n())
DataComp <- inner_join(CaseSum,N1Sum,by=c("Site"))%>%
mutate(Dif=NCase-NN1,min=ifelse(NCase<NN1,NCase,NN1))
LowCaseDataPoints <- DataComp%>%
filter(Dif<0)
#library(dynlm)
IsFull <- function(DF){
return(length(DF$Date)==max(DF$Date)-min(DF$Date)+1)
}
MergedDF <- BestCorDFGen("Madison")
#TODO:collection date
#library("robets")
#.0131
MethodPlot <- function(DF){
RobMod=fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
plot(RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF$Site))
}
MethodPlot(MergedDF)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(ggpubr)
library(forecast)
library(lmtest)
library(lubridate)
library(limma)
library(zoo)
library(dplyr)
library("robets")
#Data Files and prep work
source("../../Scripts/GenPlotMaking.R")
source("../../Scripts/WasteWaterDataProccess.R")
source("../../Scripts/CassesDataProccess.R")
source("../../Scripts/HelperFunctions.R")
PathStarter="Z:/"
LatMMSDFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/MMSD_Cases.csv")
LatSpringDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/SpringSemester_CasesByDorm.TSV")
LatFallDormFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/FallSemester_CasesByDorm.TSV")
LIMSFN <- paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/WATERMICRO_WW_COVID-2021-06-30 17 40.xlsx")
HFGCasesFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HighFreq_CaseData_2021-05-07.csv")
LatCaseDF <- CovidDataPARSER(LatSpringDormFN,LatFallDormFN,MMSDFN = LatMMSDFN)%>%
filter(!is.na(Site))%>%
select(Date,Site,Cases,Tests,Per_pos)
HFGCaseDF <- HFGCasesPARSER(FN = HFGCasesFN)%>%
filter(!is.na(Site))%>%
mutate(Tests=NA,Per_pos=NA)%>%
select(Date,Site,Cases=ReportedCases,Tests,Per_pos)%>%
mutate(Cases = ifelse(Cases==-999,2.5,Cases))%>%
filter(Site!="Madison")
FullCase <- rbind(HFGCaseDF,LatCaseDF)
FullCaseRoll <- RollPerPos(FullCase,"Cases","Tests",Facet="Site",n = 14)
LIMSFullDF <- LIMSDataPARSER(LIMSFN)%>%
select(Date,Site, BCoV, N1,N1Error,N2, N2Error,PMMoV,Pop,FlowRate)
CaseSum=FullCase%>%
filter(!is.na(Cases))%>%
group_by(Site)%>%
summarise(NCase=n())
N1Sum=LIMSFullDF%>%
filter(!is.na(N1))%>%
group_by(Site)%>%
summarise(NN1=n())
DataComp <- inner_join(CaseSum,N1Sum,by=c("Site"))%>%
mutate(Dif=NCase-NN1,min=ifelse(NCase<NN1,NCase,NN1))
LowCaseDataPoints <- DataComp%>%
filter(Dif<0)
#library(dynlm)
IsFull <- function(DF){
return(length(DF$Date)==max(DF$Date)-min(DF$Date)+1)
}
MergedDF <- BestCorDFGen("Madison")
#TODO:collection date
#.0131
MethodPlot <- function(DF){
RobMod=fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
plot(RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF$Site))
}
MethodPlot(MergedDF)
Intercepters <- c("MMSD-P7" ,"MMSD-P2" ,
"MMSD-P8","MMSD-P11",
"MMSD-P18")
IntercepterDFList <- lapply(Intercepters,BestCorDFGen,DateFilt=mdy("2/1/2021"))
lapply(IntercepterDFList,MethodPlot)
Sites <- c("Hudson","Kenosha","Oshkosh","River Falls","Sun Prairie","Wausau")
SitesDFList <- lapply(Sites,BestCorDFGen,DateFilt=mdy("10/1/2020"))
lapply(SitesDFList,MethodPlot)
#TODO:collection date
#.0131
MethodPlot <- function(DF){
DF2 <- DF
DF2$RobMod <- fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
DF2 <- DF2%>%
filter(!is.na(Cases2))
plot(DF2$RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF$Site))
}
MethodPlot(MergedDF)
Intercepters <- c("MMSD-P7" ,"MMSD-P2" ,
"MMSD-P8","MMSD-P11",
"MMSD-P18")
IntercepterDFList <- lapply(Intercepters,BestCorDFGen,DateFilt=mdy("2/1/2021"))
lapply(IntercepterDFList,MethodPlot)
Sites <- c("Hudson","Kenosha","Oshkosh","River Falls","Sun Prairie","Wausau")
SitesDFList <- lapply(Sites,BestCorDFGen,DateFilt=mdy("10/1/2020"))
lapply(SitesDFList,MethodPlot)
MethodPlot <- function(DF){
DF2 <- DF
DF2$RobMod <- fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
DF2 <- DF2%>%
filter(!is.na(Cases2))
plot(DF2$RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF$Site))
}
MethodPlot <- function(DF){
DF2 <- DF
DF2$RobMod <- fitted.values(robets((DF$"N1Filtered"),
alpha=.0131,model="AAN"))
DF2 <- DF2%>%
filter(!is.na(Cases2))
plot(DF2$RobMod,type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF2$"Cases2"),col="Red",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF2$"N1Filtered",
width=35,FUN=mean,align="right",fill=NA)),
col="Green",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((zoo::rollapply(data=DF2$"N1Filtered",
width=3,FUN=median,align="center",fill=NA)),
col="Blue",type="l",yaxt='n', ann=FALSE)
par(new = TRUE)
plot((DF2$"LoessN1"),col="pink",type="l",yaxt='n', ann=FALSE)
legend(x="topright", legend=c("SLD Cases","Robust ES","35 day MA","3 day meadian N1","loess"),fill=c("Red","Black","Green","Blue","pink"),cex=.75)
title(unique(DF2$Site))
}
MethodPlot(MergedDF)
Intercepters <- c("MMSD-P7" ,"MMSD-P2" ,
"MMSD-P8","MMSD-P11",
"MMSD-P18")
IntercepterDFList <- lapply(Intercepters,BestCorDFGen,DateFilt=mdy("2/1/2021"))
lapply(IntercepterDFList,MethodPlot)
Sites <- c("Hudson","Kenosha","Oshkosh","River Falls","Sun Prairie","Wausau")
SitesDFList <- lapply(Sites,BestCorDFGen,DateFilt=mdy("10/1/2020"))
lapply(SitesDFList,MethodPlot)
library(ggpubr)
library(dplyr)
library(lubridate)
#Data Files and prep work
source("../../Scripts/GenPlotMaking.R")
source("../../Scripts/WasteWaterDataProccess.R")
source("../../Scripts/CassesDataProccess.R")
source("../../Scripts/HelperFunctions.R")
PathStarter="Z:/"
HFGCasesFN  <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HighFreq_CaseData_2021-05-07.csv")
HFGWasteFN <-  paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HFG data for stats corrected 071421.xlsx")
HFGPop <- paste0(PathStarter,"COVID-19_WastewaterAnalysis/data/raw/HFGPop.csv")
HFGWasteDF <- HFGWastePARSER(HFGWasteFN)
HFGCaseDF <- HFGCasesPARSER(HFGCasesFN)
#mutate(across(c("ReportedCases", "EpisodeCases","",""), scale2))
Mod <- HFGWasteDF%>%
group_by(Plant,Date,Filter)%>%
summarise(ML=mean(log(N1GC)),VL=var(log(N1GC)),
MN=mean(N1GC),VN=var(N1GC))
summary(lm(VL~I(VN/MN^2),data=Mod))
summary(lm(VL~I(VN),data=Mod))
Mod%>%
ggplot()+
geom_point(aes(x=log(MN),y=ML))
Mod%>%
ggplot()+
geom_point(aes(x=VN/MN^2,y=VL))
Mod%>%
filter(!is.na(ML),!is.na(VL))%>%
mutate(VNTL=VN/MN^2)%>%
mutate(A=abs(VL-VNTL)/VL)%>%
ungroup()%>%
summarise(ME=mean(A),FilterVar=fishmethods::combinevar(ML,VL,rep(3,length(ML)))[[2]])
plot(lm(VL~I(VN/MN^2)-1,data=Mod))
mean(Mod$VL,na.rm=TRUE)
HFGWasteDF%>%
ggplot()+
aes(x=Date,y=N1GC)+
geom_point(aes(color=as.factor(Well),shape=as.factor(Filter )))+
facet_wrap(~Plant,scales = "free_y")
library(forecast)
library(zoo)
HFGWasteUSEDF <- HFGWasteDF%>%
filter(Plant!="River Falls")%>%
select(Date,Plant,N1GC,Filter)
LoessHFG <- HFGWasteUSEDF%>%
group_by(Date,Plant)%>%
summarise(N1Date=exp(mean(log(N1GC),na.rm=TRUE)))%>%
ungroup()%>%
arrange(Plant, Date) %>%
mutate(RealN1=predict(loess(N1Date~as.numeric(Date),span=.7)))
HFGSumFilter <- HFGWasteUSEDF%>%
group_by(Date,Plant,Filter)%>%
summarise(N1Filt=exp(mean(log(N1GC),na.rm=TRUE)))
HFGDataMod <- full_join(full_join(LoessHFG,HFGWasteDF,by=c("Date","Plant")),
HFGSumFilter,by=c("Date","Plant","Filter"))%>%
select(Date,Plant,RealN1,N1Date,N1Filt,N1GC)
SSM <- function(Messured,Real){
return(sum((log(Messured)-log(Real))^2,na.rm=TRUE)/(length(Real)-1))
}
SSM(HFGDataMod$N1GC,HFGDataMod$RealN1)
